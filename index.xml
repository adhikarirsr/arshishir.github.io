<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>S.R.A on S.R.A</title>
    <link>https://arshishir.github.io/</link>
    <description>Recent content in S.R.A on S.R.A</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2019</copyright>
    <lastBuildDate>Sun, 15 Oct 2017 00:00:00 -0400</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Test Blog</title>
      <link>https://arshishir.github.io/post/blog1/</link>
      <pubDate>Sat, 19 Jan 2019 01:38:30 -0500</pubDate>
      
      <guid>https://arshishir.github.io/post/blog1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Cracking Captcha using Deep Learning</title>
      <link>https://arshishir.github.io/projects/cracking_captach/</link>
      <pubDate>Sat, 19 Jan 2019 00:00:00 -0500</pubDate>
      
      <guid>https://arshishir.github.io/projects/cracking_captach/</guid>
      <description>

&lt;h2 id=&#34;research&#34;&gt;Research&lt;/h2&gt;

&lt;p&gt;We have been mostly exploring theoretical aspects of machine learning. This project grew out of our need to get our hands dirty. So, the goal of this project is to explore deep learning by figuring out how to crack captcha.&lt;/p&gt;

&lt;h2 id=&#34;tools&#34;&gt;Tools&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Mathematica: For machine learning&lt;/li&gt;
&lt;li&gt;Python: For generating data&lt;/li&gt;
&lt;li&gt;Julia: Future goal is to use Julia for ML implementation&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;procedure&#34;&gt;Procedure&lt;/h2&gt;

&lt;p&gt;Use the following python code to create 50,000 Captcha :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import random
import numpy as np
import string
from captcha.image import ImageCaptcha

image = ImageCaptcha()
clist = list(string.ascii_uppercase+string.digits)
random.shuffle(clist)

labels = []
for j in range(50000):
    randstr = &#39;&#39;
    for i in range(4):
        randstr = randstr + random.choice(clist)
    labels.append(randstr)
    data = image.generate(randstr)
    image.write(randstr, &#39;~/Desktop/Neural_nets/data_10/&#39;+randstr+&#39;.png&#39;)

with open(&#39;~/Desktop/Neural_nets/data_10/&#39;+&#39;labels.txt&#39;,&#39;w&#39;) as f:
  for labs in labels:
      f.write(&#39;%s\n&#39; %labs)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Modeling Biotâ€“Savart law using Machine Learning</title>
      <link>https://arshishir.github.io/projects/biot_svarat/</link>
      <pubDate>Sat, 19 Jan 2019 00:00:00 -0500</pubDate>
      
      <guid>https://arshishir.github.io/projects/biot_svarat/</guid>
      <description>

&lt;h2 id=&#34;research&#34;&gt;Research&lt;/h2&gt;

&lt;p&gt;The goal of this project is to play with different deep learning architecture to see if we  neural net can come up with a function that can model Biot-Savart law.&lt;/p&gt;

&lt;h2 id=&#34;biot-savart-law&#34;&gt;Biot-Savart Law&lt;/h2&gt;

&lt;p&gt;$$ B \left ( r \right) = \frac{\mu_0}{4\pi} \int_C \frac{I dl \times r&amp;rsquo;}{|r&amp;rsquo;|^3} $$&lt;/p&gt;

&lt;h2 id=&#34;collaborators&#34;&gt;Collaborators&lt;/h2&gt;

&lt;h4 id=&#34;case-western-reserve-university&#34;&gt;Case Western Reserve University&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Mingdong Fan&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Unraveling the mechanism of the cadherin-catenin-actin catch bond</title>
      <link>https://arshishir.github.io/publication/plos_2018/jimm/</link>
      <pubDate>Fri, 17 Aug 2018 00:00:00 -0400</pubDate>
      
      <guid>https://arshishir.github.io/publication/plos_2018/jimm/</guid>
      <description>&lt;p&gt;More detail can easily be written here using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Conformation of a flexible chain in explicit solvent: Accurate solvation potentials for Lennard-Jones chains</title>
      <link>https://arshishir.github.io/publication/jcp_2015/jimm/</link>
      <pubDate>Mon, 23 Nov 2015 00:00:00 -0500</pubDate>
      
      <guid>https://arshishir.github.io/publication/jcp_2015/jimm/</guid>
      <description>&lt;p&gt;More detail can easily be written here using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Conformation of a flexible chain in explicit solvent: Exact solvation potentials for short Lennard-Jones chains</title>
      <link>https://arshishir.github.io/publication/jcp_2011/jimm/</link>
      <pubDate>Thu, 28 Jul 2011 00:00:00 -0400</pubDate>
      
      <guid>https://arshishir.github.io/publication/jcp_2011/jimm/</guid>
      <description>&lt;p&gt;More detail can easily be written here using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
